// JayData 1.1.1
// Dual licensed under MIT and GPL v2
// Copyright JayStack Technologies (http://jaydata.org/licensing)
//
// JayData is a standards-based, cross-platform Javascript library and a set of
// practices to access and manipulate data from various online and offline sources.
//
// Credits:
//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta
//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,
//     Zoltán Gyebrovszki
//
// More info: http://jaydata.org
$data.Class.define("$data.storageProviders.indexedDb.IndexedDBStorageProvider",$data.StorageProviderBase,null,{constructor:function(a){this.indexedDB=window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB;this.IDBRequest=window.IDBRequest||window.webkitIDBRequest||window.mozIDBRequest||window.msIDBRequest;this.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.mozIDBTransaction||window.msIDBTransaction;this.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||
window.mozIDBKeyRange||window.msIDBKeyRange;this.IDBDatabaseException=window.IDBDatabaseException||window.webkitIDBDatabaseException||window.mozIDBDatabaseException||window.msIDBDatabaseException;this.IDBOpenDBRequest=window.IDBOpenDBRequest||window.webkitIDBOpenDBRequest||window.mozIDBOpenDBRequest||window.msIDBOpenDBRequest;this.newVersionAPI=!(!window.IDBFactory||!IDBFactory.prototype.deleteDatabase);this.sequenceStore="__jayData_sequence";this.SqlCommands=[];this.context={};this.providerConfiguration=
$data.typeSystem.extend({databaseName:"JayDataDemo",version:1,dbCreation:$data.storageProviders.DbCreationType.DropTableIfChanged},a);this._setupExtensionMethods()},supportedBinaryOperators:{value:{equal:{mapTo:" == ",dataType:$data.Boolean},notEqual:{mapTo:" != ",dataType:$data.Boolean},equalTyped:{mapTo:" == ",dataType:$data.Boolean},notEqualTyped:{mapTo:" != ",dataType:$data.Boolean},greaterThan:{mapTo:" > ",dataType:$data.Boolean},greaterThanOrEqual:{mapTo:" >= ",dataType:$data.Boolean},lessThan:{mapTo:" < ",
dataType:$data.Boolean},lessThenOrEqual:{mapTo:" <= ",dataType:$data.Boolean},or:{mapTo:" || ",dataType:$data.Boolean},and:{mapTo:" && ",dataType:$data.Boolean}}},supportedSetOperations:{value:{length:{},toArray:{},forEach:{}},enumerable:!0,writable:!0},_setupExtensionMethods:function(){var a=this,b=this.IDBRequest,c=this.IDBTransaction,d=this.IDBOpenDBRequest,e=function(b){"object"!==typeof b&&Guard.raise(new Exception("Invalid callbackSettings",null,b));for(var d in b)"undefined"===typeof this[d]||
"function"!==typeof b[d]||(this[d]=b[d]);this.readyState==a.IDBRequest.DONE&&console.log("WARNING: request finished before setCallbacks. Do not use breakpoints between creating the request object and finishing the setting of callbacks");return this};"function"!==typeof b.prototype.setCallbacks&&(b.prototype.setCallbacks=e);"function"!==typeof c.prototype.setCallbacks&&(c.prototype.setCallbacks=e);d&&"function"!==typeof d.prototype.setCallbacks&&(d.prototype.setCallbacks=e)},supportedDataTypes:{value:[$data.Integer,
$data.Number,$data.Date,$data.String,$data.Boolean,$data.Blob,$data.Array,$data.Object],writable:!1},fieldConverter:{value:{fromDb:{"$data.Integer":function(a){return a},"$data.Number":function(a){return a},"$data.Date":function(a){return a},"$data.String":function(a){return a},"$data.Boolean":function(a){return a},"$data.Blob":function(a){return a},"$data.Array":function(a){return void 0===a?new $data.Array:a},"$data.Object":function(a){return a}},toDb:{"$data.Integer":function(a){return a},"$data.Number":function(a){return a},
"$data.Date":function(a){return a},"$data.String":function(a){return a},"$data.Boolean":function(a){return a},"$data.Blob":function(a){return a},"$data.Array":function(a){return a},"$data.Object":function(a){return a}}}},initializeStore:function(a){var a=$data.typeSystem.createCallbackSetting(a),b=this,c=function(a){a.onversionchange=function(a){return a.target.close()};var d=[];b.context._storageModel.forEach(function(c){function e(){var g={},h=b._getKeySettings(c);b.newVersionAPI?h.autoIncrement&&
d.push(c.TableName):g.autoIncrement=h.autoIncrement;void 0!==h.keyPath&&(g.keyPath=h.keyPath);a.createObjectStore(c.TableName,g)}a.objectStoreNames.contains(c.TableName)?b.providerConfiguration.dbCreation===$data.storageProviders.DbCreationType.DropAllExistingTables&&(a.deleteObjectStore(c.TableName),e()):e()});0<d.length&&!a.objectStoreNames.contains(b.sequenceStore)&&(a.createObjectStore(b.sequenceStore,{keyPath:"store"}),d=[]);return d},d=null,e={onupgradeneeded:function(a){d=c(a.target.result)},
onerror:a.error,onblocked:a.error,onsuccess:function(e){b.db=e.target.result;b.db.onversionchange=function(a){a.target.close()};if(b.newVersionAPI){if(d&&0<d.length){var f=b.db.transaction([b.sequenceStore],b.IDBTransaction.READ_WRITE).setCallbacks({onerror:a.error,oncomplete:function(){a.success(b.context)}}).objectStore(b.sequenceStore);switch(b.providerConfiguration.dbCreation){case $data.storageProviders.DbCreationType.DropAllExistingTables:case $data.storageProviders.DbCreationType.DropTableIfChanged:f.clear();
break;default:d.forEach(function(a){f["delete"](a)})}}a.success(b.context)}else b.db.setVersion(b.providerConfiguration.version).setCallbacks({onerror:a.error,onblocked:a.error,onsuccess:function(){c(b.db);a.success(b.context)}})}};b.newVersionAPI?b.indexedDB.open(b.providerConfiguration.databaseName,parseInt(b.providerConfiguration.version,10)).setCallbacks(e):b.indexedDB.open(b.providerConfiguration.databaseName).setCallbacks(e)},executeQuery:function(a,b){var b=$data.typeSystem.createCallbackSetting(b),
c=a.context.getEntitySetFromElementType(a.defaultType),c=this.db.transaction([c.tableName],this.IDBTransaction.READ_ONLY).setCallbacks({onerror:b.error,onabort:b.error,oncomplete:function(){b.success(a)}}).objectStore(c.tableName);Container.createModelBinderConfigCompiler(a,[]).Visit(a.expression);switch(a.expression.nodeType){case $data.Expressions.ExpressionType.Count:c.count().onsuccess=function(b){a.rawDataList.push({cnt:b.target.result})};break;default:c.openCursor().onsuccess=function(b){if(b=
b.target.result)a.rawDataList.push(b.value),b["continue"]()}}},_getKeySettings:function(a){var b={autoIncrement:!1},c=[];a.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function(a){a.key&&c.push(a.name);a.computed&&(a.key||Guard.raise(new Exception("Only key field can be a computed field!")),b.autoIncrement=!0)});1<c.length?(b.autoIncrement&&Guard.raise(new Exception("Auto increment is only valid for a single key!")),b.keys=c):1==c.length?b.keyPath=c[0]:Guard.raise(new Exception("No valid key found!"));
return b},saveChanges:function(a,b){function c(){if(0===e.length)a.success();else{var b={},f=e.shift().map(function(a){b[a.entitySet.tableName]=!0;a.physicalData={};d.context._storageModel.getStorageModel(a.data.getType()).PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function(b){if(!b.key||!(b.computed&&void 0==a.data[b.name]))a.physicalData[b.name]=a.data[b.name]});return a}),i=[],j;for(j in b)i.push(j);var g=d.db.transaction(i,d.IDBTransaction.READ_WRITE).setCallbacks({onerror:function(b){b.target.errorCode!==
d.IDBDatabaseException.ABORT_ERR&&a.error(b)},oncomplete:function(){c()}}),h=new function(){var a={};this.getSettingsForItem=function(b){var c=b.data.getType().fullName;a.hasOwnProperty(c)||(a[c]=d._getKeySettings(d.context._storageModel.getStorageModel(b.data.getType())));return a[c]}};f.forEach(function(b){var c=g.objectStore(b.entitySet.tableName),e=h.getSettingsForItem(b),f=e.keys&&e.keys.map(function(a){return b.physicalData[a]})||null;try{var k=function(m){var l=e.keyPath?b.physicalData[e.keyPath]:
f,n=b.physicalData;c.openCursor(d.IDBKeyRange.only(l)).onsuccess=function(c){try{var d=c.target.result;d?m(d,l,n):Guard.raise(new Exception("Object not found",null,b))}catch(e){g.abort(),a.error(e)}}};switch(b.data.entityState){case $data.EntityState.Added:k=function(a,b){var b=$data.typeSystem.createCallbackSetting(b),c=null,f=d.db.transaction([d.sequenceStore],d.IDBTransaction.READ_WRITE).setCallbacks({onerror:b.error,oncomplete:function(){a.physicalData[e.keyPath]=c.lastInsertedId;b.success(a)}}).objectStore(d.sequenceStore);
f.openCursor(d.IDBKeyRange.only(a.entitySet.tableName)).onsuccess=function(b){if(b=b.target.result){c=b.value;var d=c.lastInsertedId;"number"!==typeof d&&Guard.raise(new Exception("Invalid field type! Must be number",null,d));++c.lastInsertedId;b.update(c)}else f.add(c={store:a.entitySet.tableName,lastInsertedId:1})}};if(e.keyPath){var i=function(a){c.add(a.physicalData).onsuccess=function(b){a.data[e.keyPath]=b.target.result}};d.newVersionAPI&&void 0===b.physicalData[e.keyPath]?k(b,{success:i,error:function(a){Guard.raise(new Exception("Can't generate new id",
null,a))}}):i(b)}else c.add(b.physicalData,f);break;case $data.EntityState.Deleted:k(function(a){a["delete"]()});break;case $data.EntityState.Modified:k(function(a,b,c){a.update(c)});break;case $data.EntityState.Unchanged:break;default:Guard.raise(new Exception("Not supported entity state",null,b))}}catch(j){g.abort(),a.error(j)}})}}var d=this,e=d.buildIndependentBlocks(b);c()},_compile:function(a){return Container.createIndexedDBCompiler().compile(a)}},{isSupported:{get:function(){return window.indexedDB||
window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB},set:function(){}}});$data.storageProviders.indexedDb.IndexedDBStorageProvider.isSupported&&$data.StorageProviderBase.registerProvider("indexedDb",$data.storageProviders.indexedDb.IndexedDBStorageProvider);
