// JayData 1.2.3
// Dual licensed under MIT and GPL v2
// Copyright JayStack Technologies (http://jaydata.org/licensing)
//
// JayData is a standards-based, cross-platform Javascript library and a set of
// practices to access and manipulate data from various online and offline sources.
//
// Credits:
//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta
//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,
//     Zoltán Gyebrovszki
//
// More info: http://jaydata.org
$data.Class.define("$data.storageProviders.indexedDb.IndexedDBStorageProvider",$data.StorageProviderBase,null,{constructor:function(a){this.indexedDB=window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB;this.IDBRequest=window.IDBRequest||window.webkitIDBRequest||window.mozIDBRequest||window.msIDBRequest;this.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.mozIDBTransaction||window.msIDBTransaction;this.IDBTransactionType={READ_ONLY:"readonly",
READ_WRITE:"readwrite",VERSIONCHANGE:"versionchange"};this.IDBTransaction.READ_ONLY&&this.IDBTransaction.READ_WRITE&&(this.IDBTransactionType.READ_ONLY=this.IDBTransaction.READ_ONLY,this.IDBTransactionType.READ_WRITE=this.IDBTransaction.READ_WRITE);this.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.mozIDBKeyRange||window.msIDBKeyRange;this.IDBDatabaseException=window.IDBDatabaseException||window.webkitIDBDatabaseException||window.mozIDBDatabaseException||window.msIDBDatabaseException;
this.IDBOpenDBRequest=window.IDBOpenDBRequest||window.webkitIDBOpenDBRequest||window.mozIDBOpenDBRequest||window.msIDBOpenDBRequest;this.newVersionAPI=!(!window.IDBFactory||!IDBFactory.prototype.deleteDatabase);this.sequenceStore="__jayData_sequence";this.SqlCommands=[];this.context={};this.providerConfiguration=$data.typeSystem.extend({databaseName:"JayDataDemo",version:1,dbCreation:$data.storageProviders.DbCreationType.DropTableIfChanged},a);this._setupExtensionMethods()},supportedBinaryOperators:{value:{equal:{mapTo:" == ",
dataType:$data.Boolean},notEqual:{mapTo:" != ",dataType:$data.Boolean},equalTyped:{mapTo:" == ",dataType:$data.Boolean},notEqualTyped:{mapTo:" != ",dataType:$data.Boolean},greaterThan:{mapTo:" > ",dataType:$data.Boolean},greaterThanOrEqual:{mapTo:" >= ",dataType:$data.Boolean},lessThan:{mapTo:" < ",dataType:$data.Boolean},lessThenOrEqual:{mapTo:" <= ",dataType:$data.Boolean},or:{mapTo:" || ",dataType:$data.Boolean},and:{mapTo:" && ",dataType:$data.Boolean}}},supportedSetOperations:{value:{length:{},
toArray:{},forEach:{}},enumerable:!0,writable:!0},_setupExtensionMethods:function(){var a=this.IDBRequest,b=this.IDBTransaction,c=this.IDBOpenDBRequest,d=function(a){"object"!==typeof a&&Guard.raise(new Exception("Invalid callbackSettings",null,a));for(var b in a)"undefined"===typeof this[b]||"function"!==typeof a[b]||(this[b]=a[b]);return this};a&&"function"!==typeof a.prototype.setCallbacks&&(a.prototype.setCallbacks=d);b&&"function"!==typeof b.prototype.setCallbacks&&(b.prototype.setCallbacks=
d);c&&"function"!==typeof c.prototype.setCallbacks&&(c.prototype.setCallbacks=d)},supportedDataTypes:{value:[$data.Integer,$data.Number,$data.Date,$data.String,$data.Boolean,$data.Blob,$data.Array,$data.Object,$data.Guid],writable:!1},fieldConverter:{value:{fromDb:{"$data.Integer":function(a){return a},"$data.Number":function(a){return a},"$data.Date":function(a){return a},"$data.String":function(a){return a},"$data.Boolean":function(a){return a},"$data.Blob":function(a){return a},"$data.Array":function(a){return void 0===
a?new $data.Array:a},"$data.Object":function(a){return a},"$data.Guid":function(a){return a?$data.parseGuid(a):a}},toDb:{"$data.Integer":function(a){return a},"$data.Number":function(a){return a},"$data.Date":function(a){return a},"$data.String":function(a){return a},"$data.Boolean":function(a){return a},"$data.Blob":function(a){return a},"$data.Array":function(a){return a},"$data.Object":function(a){return a},"$data.Guid":function(a){return a?a.value:a}}}},_getObjectStoreDefinition:function(a){var b=
{storeName:a.TableName},a=a.PhysicalType.memberDefinitions.getKeyProperties();if(0==a.length)throw b=Error("Entity must have a key field: "+b.storeName),b.name="KeyNotFoundError",b;for(var c=0;c<a.length;c++){if(!0===a[c].computed&&"$data.Integer"!==Container.resolveName(a[c].type))throw b=Error("Computed key field must be of integer type: "+b.storeName),b.name="ComputedKeyFieldError",b;if(2<a.length&&a[c].computed)throw b=Error("With multiple keys the computed field is not allowed: "+b.storeName),
b.name="MultipleComputedKeyFieldError",b;}b.keyFields=a;return b},_getObjectStoreDefinitions:function(){var a=[],b=this;b.context._storageModel.forEach(function(c){c=b._getObjectStoreDefinition(c);a.push(c)});return a},_oldCreateDB:function(a,b,c){a.db.onversionchange=function(a){return a.target.close()};this._createDB(a.db,b);a.oncomplete=c},_createDB:function(a,b){for(var c=0;c<b.length;c++){var d=b[c];if(!a.objectStoreNames.contains(d.storeName)){var e={};if(1==d.keyFields.length)e={keyPath:d.keyFields[0].name,
autoIncrement:d.keyFields[0].computed};else{e.key=[];for(c=0;c<d.keyFields.length;c++)e.key.push(d.keyFields[c].name)}a.createObjectStore(d.storeName,e)}}},_hasDbChanges:function(a,b){for(var c=!0,d=0;d<b.length&&c;d++)c=c&&a.objectStoreNames.contains(b[d].storeName);return!c},onupgradeneeded:function(a){var b=this;return function(c){c=c.target.result;c.onversionchange=function(a){return a.target.close()};b._hasDbChanges(c,a)&&b._createDB(c,a)}},initializeStore:function(a){var a=$data.typeSystem.createCallbackSetting(a),
b=this,c;try{c=b._getObjectStoreDefinitions()}catch(d){console.log(c),a.error(d)}b.indexedDB.open(b.providerConfiguration.databaseName).setCallbacks({onsuccess:function(d){d=d.target.result;d.onversionchange=function(a){return a.target.close()};var j=b._hasDbChanges(d,c);if(d.setVersion){if(""===d.version||j){d.setVersion(parseInt(d.version)||1).onsuccess=function(d){b._oldCreateDB(d.target.result,c,function(d){b.db=d.target.db;a.success(b.context)})};return}}else if(j){d.close();d=parseInt(d.version)+
1;b.indexedDB.open(b.providerConfiguration.databaseName,d).setCallbacks({onsuccess:function(d){b.db=d.target.result;a.success(b.context)},onupgradeneeded:b.onupgradeneeded(c),onerror:a.error,onabort:a.error,onblocked:a.error});return}b.db=d;a.success(b.context)},onupgradeneeded:b.onupgradeneeded(c),onerror:a.error,onabort:a.error,onblocked:a.error})},_initializeStore:function(a){var a=$data.typeSystem.createCallbackSetting(a),b=this,c=function(a){a.onversionchange=function(a){return a.target.close()};
var d=[];b.context._storageModel.forEach(function(c){function e(){var i={},g=b._getKeySettings(c);b.newVersionAPI?g.autoIncrement&&d.push(c.TableName):i.autoIncrement=g.autoIncrement;void 0!==g.keyPath&&(i.keyPath=g.keyPath);a.createObjectStore(c.TableName,i)}a.objectStoreNames.contains(c.TableName)?b.providerConfiguration.dbCreation===$data.storageProviders.DbCreationType.DropAllExistingTables&&(a.deleteObjectStore(c.TableName),e()):e()});0<d.length&&!a.objectStoreNames.contains(b.sequenceStore)&&
(a.createObjectStore(b.sequenceStore,{keyPath:"store"}),d=[]);return d},d=null,e={onupgradeneeded:function(a){d=c(a.target.result)},onerror:a.error,onblocked:a.error,onsuccess:function(e){b.db=e.target.result;b.db.onversionchange=function(a){a.target.close()};if(b.newVersionAPI){if(d&&0<d.length){var f=b.db.transaction([b.sequenceStore],b.IDBTransactionType.READ_WRITE).setCallbacks({onerror:a.error,oncomplete:function(){a.success(b.context)}}).objectStore(b.sequenceStore);switch(b.providerConfiguration.dbCreation){case $data.storageProviders.DbCreationType.DropAllExistingTables:case $data.storageProviders.DbCreationType.DropTableIfChanged:f.clear();
break;default:d.forEach(function(a){f["delete"](a)})}}a.success(b.context)}else var h=b.db.setVersion(b.providerConfiguration.version.toString()).setCallbacks({onerror:a.error,onblocked:a.error,onsuccess:function(){c(b.db);h.result.oncomplete=function(){a.success(b.context)}}})}};b.newVersionAPI?b.indexedDB.open(b.providerConfiguration.databaseName,parseInt(b.providerConfiguration.version,10)).setCallbacks(e):b.indexedDB.open(b.providerConfiguration.databaseName).setCallbacks(e)},executeQuery:function(a,
b){var b=$data.typeSystem.createCallbackSetting(b),c=a.context.getEntitySetFromElementType(a.defaultType),c=this.db.transaction([c.tableName],this.IDBTransactionType.READ_ONLY).setCallbacks({onerror:b.error,onabort:b.error,oncomplete:function(){b.success(a)}}).objectStore(c.tableName);Container.createModelBinderConfigCompiler(a,[]).Visit(a.expression);switch(a.expression.nodeType){case $data.Expressions.ExpressionType.Count:c.count().onsuccess=function(b){a.rawDataList.push({cnt:b.target.result})};
break;default:c.openCursor().onsuccess=function(b){if(b=b.target.result)a.rawDataList.push(b.value),b["continue"]()}}},_getKeySettings:function(a){var b={autoIncrement:!1},c=[];a.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function(a){a.key&&c.push(a.name);a.computed&&(a.key||Guard.raise(new Exception("Only key field can be a computed field!")),b.autoIncrement=!0)});1<c.length?(b.autoIncrement&&Guard.raise(new Exception("Auto increment is only valid for a single key!")),b.keys=
c):1==c.length?b.keyPath=c[0]:Guard.raise(new Exception("No valid key found!"));return b},saveChanges:function(a,b){function c(){if(0===e.length)a.success();else{var b={},f=e.shift().map(function(a){b[a.entitySet.tableName]=!0;a.physicalData={};d.context._storageModel.getStorageModel(a.data.getType()).PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function(b){if(!b.key||!(b.computed&&void 0==a.data[b.name]))if("undefined"===typeof b.concurrencyMode&&(!0===b.key||a.data.entityState===
$data.EntityState.Added||a.data.changedProperties&&a.data.changedProperties.some(function(a){return a.name===b.name}))){var c=Container.resolveName(b.type);d.fieldConverter.toDb[c]?a.physicalData[b.name]=d.fieldConverter.toDb[c](a.data[b.name]):(console.log("WARN!!!"),a.physicalData[b.name]=a.data[b.name])}});return a}),h=[],g;for(g in b)h.push(g);var i=d.db.transaction(h,d.IDBTransactionType.READ_WRITE).setCallbacks({onerror:function(b){b.target.errorCode!==d.IDBDatabaseException.ABORT_ERR&&a.error(b)},
oncomplete:function(){c()}}),k=new function(){var a={};this.getSettingsForItem=function(b){var c=b.data.getType().fullName;a.hasOwnProperty(c)||(a[c]=d._getKeySettings(d.context._storageModel.getStorageModel(b.data.getType())));return a[c]}};f.forEach(function(b){var c=i.objectStore(b.entitySet.tableName),e=k.getSettingsForItem(b),g=e.keys&&e.keys.map(function(a){return b.physicalData[a]})||null;try{var f=function(l){var f=e.keyPath?b.physicalData[e.keyPath]:g,h=b.physicalData;c.openCursor(d.IDBKeyRange.only(f)).onsuccess=
function(c){try{var d=c.target.result;d?l(d,f,h):Guard.raise(new Exception("Object not found",null,b))}catch(e){i.abort(),a.error(e)}}};switch(b.data.entityState){case $data.EntityState.Added:e.keyPath?c.add(b.physicalData).onsuccess=function(a){b.data[e.keyPath]=a.target.result}:c.add(b.physicalData,g);break;case $data.EntityState.Deleted:f(function(a){a["delete"]()});break;case $data.EntityState.Modified:f(function(a,b,c){a.update($data.typeSystem.extend(a.value,c))});break;case $data.EntityState.Unchanged:break;
default:Guard.raise(new Exception("Not supported entity state",null,b))}}catch(h){i.abort(),a.error(h)}})}}var d=this,e=d.buildIndependentBlocks(b);c()},_compile:function(a){return Container.createIndexedDBCompiler().compile(a)}},{isSupported:{get:function(){return window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB?!0:!1},set:function(){}}});
$data.storageProviders.indexedDb.IndexedDBStorageProvider.isSupported&&$data.StorageProviderBase.registerProvider("indexedDb",$data.storageProviders.indexedDb.IndexedDBStorageProvider);
